=enttype = [
  || [strcmp * $arg1] [strcmp (enttype) $arg1]
]

=entattr = [
  || [strcmp * $arg2] [= (entattr $arg1) $arg2]
]

// clear ents of given type
clearents = [ 
  if $editing [
    entcancel
    entselect [ =enttype $arg1 ]; 
    echo Deleted (enthavesel) $arg1 entities; 
    delent
  ] 
]

// replace all ents that match current selection
// with the values given
replaceents = [
  if $editing [
    do [
        entfind @(entget)
        entset @(loopconcat i $numargs [result $[arg@(+ $i 1)]])
    ]
    echo Replaced (enthavesel) entities  
  ]
]

selentedit      = [ saycommand ( concatword "/entset " (entget) ) ] 
selreplaceents  = [ saycommand ( concatword "/replaceents " (entget) ) ]  
selentfindall   = [ do [ entfind @(entget) ] ]

// modify given attribute of ent by a given amount
// arg1 attribute
// arg2 value
entproperty = [
  entattr $arg1 (+ (entattr $arg1) $arg2)
]

enttypelist = [ 
  lumiere modele3D spawn envmap particules son spot
  mossberg500 uzi SMAW SV_98 M32 minigun famas pistoletalien feuartifice lanceflammes
  fusilelectrique fusilplasma arbalete null9 null0 null11 null12 null13 glock
  panachay cochongrillay
  teleporteur destinationteleporteur
  saut
  base
  spot
  drapeau
]

enttypeselect = [     
  enttypelength = (listlen $enttypelist)
  next = (mod (+ (indexof $enttypelist (enttype)) $arg1) $enttypelength)
  if (< $next 0) [ next = (+ $next $enttypelength) ]
  do [entset @(listsplice (entget) (at $enttypelist $next) 0 1)]
]

////// ARMES
ent_action_mossberg500    		= [ ent_action_cycle $arg1 uzi boulemagique ]
ent_action_uzi            		= [ ent_action_cycle $arg1 SMAW mossberg500 ]
ent_action_SMAW        	  		= [ ent_action_cycle $arg1 SV_98 uzi ]
ent_action_SV_98		  		= [ ent_action_cycle $arg1 M32 SMAW ]
ent_action_M32  	      		= [ ent_action_cycle $arg1 minigun SV_98 ]
ent_action_minigun        		= [ ent_action_cycle $arg1 famas M32 ]
ent_action_famas		  		= [ ent_action_cycle $arg1 pistoletalien minigun ]
ent_action_pistoletalien 		= [ ent_action_cycle $arg1 feuartifice famas ]
ent_action_feuartifice    		= [ ent_action_cycle $arg1 lanceflammes pistoletalien ]
ent_action_lanceflammes   		= [ ent_action_cycle $arg1 fusilelectrique feuartifice ]
ent_action_fusilelectrique  	= [ ent_action_cycle $arg1 fusilplasma lanceflammes ]
ent_action_fusilplasma          = [ ent_action_cycle $arg1 arbalete fusilelectrique ]
ent_action_arbalete       	 	= [ ent_action_cycle $arg1 null9 fusilplasma ]
ent_action_null9       	  		= [ ent_action_cycle $arg1 null10 arbalete ]
ent_action_null10      	  		= [ ent_action_cycle $arg1 null11 null9 ]
ent_action_null11      	  		= [ ent_action_cycle $arg1 null12 null10 ]
ent_action_null12      	  		= [ ent_action_cycle $arg1 null13 null11 ]
ent_action_null13      	  		= [ ent_action_cycle $arg1 null14 null12 ]
ent_action_null14      	  		= [ ent_action_cycle $arg1 glock null13 ]
ent_action_glock	     		 = [ ent_action_cycle $arg1 mossberg500 null14 ]

////// OBJETS
ent_action_steroides      = [ ent_action_cycle $arg1 epo bouclieror ]
ent_action_epo			  = [ ent_action_cycle $arg1 champis steroides ]
ent_action_champis		  = [ ent_action_cycle $arg1 joint epo ]
ent_action_joint		  = [ ent_action_cycle $arg1 panachay champis  ]
ent_action_panachay       = [ ent_action_cycle $arg1 cochongrillay joint ]
ent_action_cochongrillay  = [ ent_action_cycle $arg1 bouclierfer  panachay ]
ent_action_bouclierfer 	  = [ ent_action_cycle $arg1 bouclieror cochongrillay ]
ent_action_bouclierbois	  = [ ent_action_cycle $arg1 bouclieror bouclierfer ]
ent_action_bouclieror 	  = [ ent_action_cycle $arg1 steroides bouclierfer ]

////// AUTRES
ent_action_base           = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_teleporteur    = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_destinationteleporteur = [ entproperty 1 ( * $arg1 1 ) ]
ent_action_modele3D       = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_spot		      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_lumiere        = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_saut		      = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_spawn	      = [ entproperty 0 ( * $arg1 15 ) ]
ent_action_zonereflet     = [ entproperty 0 ( * $arg1 5 ) ]
ent_action_particules     = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_son            = [ entproperty 0 ( * $arg1 1 ) ]
ent_action_cycle          = [ entset ( if ( > $arg1 -1 ) [ result $arg2 ] [ result $arg3 ] ) ]


//////// Copy and Paste //////////////

// 3 types of copying and pasting
// 1. select only cubes      -> paste only cubes
// 2. select cubes and ents  -> paste cubes and ents. same relative positions
// 3. select only ents       -> paste last selected ent. if ents are selected, replace attrs as paste

opaquepaste = 1
entcopybuf = ""

entreplace   = [ 
  do [
    if (enthavesel) [] [ newent @entcopybuf ]
    entset @entcopybuf 
  ]
]

editcopy   = [
  if (|| [havesel] [! (enthavesel)]) [
    entcopybuf = ""
    entcopy
    copy
  ] [
    entcopybuf = (entget)
  ]
]

editpaste  = [ 
  cancelpaste = (! (|| [enthavesel] [havesel]));
  if (strcmp "" $entcopybuf) [
    pastehilite
    reorient // temp; real fix will be in octaedit
    onrelease [ 
      if $opaquepaste delcube 
      paste
      entpaste
      if $cancelpaste [ cancelsel ] 
    ] 
  ] [
    entreplace
    if $cancelpaste [ cancelsel ] 
  ] 
]

/////// Selection ///////////////

// select ents with given properties
// '*' is wildcard
entfind    = [ 
  if (= $numargs 0) [
    entselect 1
  ] [
    entselect (concat [ && [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

entfindinsel = [ 
  if (= $numargs 0) [
    entselect [ insel ]
  ] [
    entselect (concat [ && [insel] [=enttype @@arg1] ] (loopconcat i (- $numargs 1) [
        result [ [=entattr @@i @@[arg@(+ $i 2)]] ]
    ]))
  ]
]

lse        = [
  line = ""
  count = 0
  entloop [
    line  = ( concatword $line (entget) "		" )
    count = ( + $count 1 )
    if (> $count 4) [
      echo $line
      line = ""
      count = 0
    ]
  ]
  if (> $count 0 ) [ echo $line ]
  echo (enthavesel) entities selected
]

enttoggle  = [ entmoving 1; entmoving 0; ]
entaddmove = [ entmoving 2 ]

grabbing = 0

drag       = [ dragging 1; onrelease [ dragging 0 ] ]
corners    = [ selectcorners 1; dragging 1; onrelease [ selectcorners 0; dragging 0 ] ]
entadd     = [ entaddmove; entmoving 0; ]
editmove   = [ moving 1; onrelease [ moving 0 ]; result $moving ]
entdrag    = [ entaddmove; onrelease [entmoving 0]; result $entmoving ] 
editdrag   = [ cancelsel; || [entdrag] [ drag ] ]
selcorners = [ if $hmapedit [ hmapselect ] [ cancelsel; || [entdrag] [ corners ] ] ]
editextend = [ || [entdrag] [ selextend; reorient; editmove ] ]

editmovewith    = [
  if (havesel) [
    || [editmove] [ @arg1 ]
    onrelease [ moving 0; dragging 0 ]
  ] [
    @arg1
  ]
]

editmovecorner = [ editmovewith selcorners ]
editmovedrag   = [ editmovewith editdrag ]

////// Other Editing commands /////////

editfacewentpush = [ 
  
  if (|| [havesel] [! (enthavesel)] ) [
    if $moving [ 
      pushsel $arg1 
    ] [ 
      entcancel
      editface $arg1 $arg2
    ] 
  ] [
      if $entmoving [ entpush $arg1 ] [ ent_action_@(enttype) $arg1 ]
  ]
]

entswithdirection = [playerstart teledest mapmodel]
entdirectionprop  = [0           0        1]

entdirection = [
  if ( && [enthavesel] [ = (havesel) 0 ] ) [
    entdiridx = (indexof $entswithdirection (enttype))
    if (>= $entdiridx 0) [
      entdirprop = (at $entdirectionprop $entdiridx)
      if (> $arg1 0) [
        entproperty $entdirprop $arg2
        if (> (entattr $entdirprop) 360) [ entproperty $entdirprop -360 ]
      ] [
        entproperty $entdirprop (- 0 $arg2)
        if (< (entattr $entdirprop) 0) [ entproperty $entdirprop 360 ]
      ]
    ]
    result 1
  ] [
    result 0
  ]
]

editdel    = [ if (! (enthavesel)) [delcube]; delent ]
editflip   = [ flip; entflip ]

editrotate = [ 
  || [ entdirection $arg1 15 ] [ 
      rotate $arg1
      entrotate $arg1 
    ] 
]

editcut    = [  
  hadselection = (havesel)
  moving 1
  if $moving [
    copy;     entcopy
    delcube;  delent
    onrelease [ 
      moving 0
      paste
      entpaste
      if ( ! $hadselection ) [ cancelsel ]
    ]
  ]
]

passthrough = [ 
  passthroughsel $arg1; 
  if $arg1 [
    passthroughcube_bak = $passthroughcube
    passthroughcube 1
  ] [
    passthroughcube $passthroughcube_bak
  ]
  entcancel 
  if $setting_entediting [ entediting ( ! $arg1 ) ]
  
]

edithud = [
    if (enthavesel) [concatword (entget) " : " (enthavesel) " selected"]
]

entcomplete = [ listcomplete $arg1 $enttypelist ]
entcomplete newent
entcomplete entfind
entcomplete clearents

listcomplete editmat "air water clip glass noclip lava gameclip death alpha"
air = [ editmat air $arg1 ]
loop i 4 [
    [water@(? $i (+ $i 1))] = [ editmat water@(? $i (+ $i 1)) $arg1 ]
    [lava@(? $i (+ $i 1))] = [ editmat lava@(? $i (+ $i 1)) $arg1 ]
    [glass@(? $i (+ $i 1))] = [ editmat glass@(? $i (+ $i 1)) $arg1 ]
]
clip = [ editmat clip $arg1 ]
noclip = [ editmat noclip $arg1 ]
gameclip = [ editmat gameclip $arg1 ]
death = [ editmat death $arg1 ]
alpha = [ editmat alpha $arg1 ]

blendpaintmodes = ["off" "replace" "dig" "fill" "inverted dig" "inverted fill"]
setblendpaintmode = [
    if (> $numargs 0) [blendpaintmode $arg1] [blendpaintmode 0]
    echo "blend paint mode set to:" (at $blendpaintmodes $blendpaintmode)
]
scrollblendbrush = [
    if (> $numargs 0) [nextblendbrush $arg1] [nextblendbrush]
    echo "blend brush set to:" (getblendbrushname (curblendbrush))
]

minimaphere = [minimapheight (at (getcampos) 2)]

getsundir = [sunlightyaw (getcamyaw); sunlightpitch (getcampitch)]
